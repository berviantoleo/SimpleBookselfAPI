name: Endpoint
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        node: [16.x, 17.x]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node }}
    - name: Install dependencies
      run: yarn --frozen-lockfile
    - name: Run Test
      run: yarn test
    - name: Upload Coverage
      if: ${{ matrix.node == '16.x' }}
      run: bash <(curl -s https://codecov.io/bash)
  build-docs:
    runs-on: ubuntu-20.04
    if: ${{ github.event_name == 'push' }}
    needs: test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Build Docs
        run: yarn docs
      - name: Deploy Docs ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4.3.3
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: docs # The folder the action should deploy.
  docker-test:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: Docker Build & Run
      run: |
        docker build . -t bookapi
        docker run -e hostname=0.0.0.0 --name bookapi -p 5000:5000 -d bookapi
    - uses: matt-ball/newman-action@v1.0.4
      with:
        collection: postman/bookselfapi.postman_collection.json
        environment: postman/bookselfapi.postman_environment.json
    - name: Docker Stop
      run: |
        docker stop bookapi
        docker rm bookapi
  docker-push:
    # Ensure test job passes before pushing image.
    needs: docker-test
    runs-on: ubuntu-20.04
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            berviantoleo/${{ env.IMAGE_NAME }}
            ghcr.io/${{ github.repository }}
        env:
          IMAGE_NAME: simplebookselfapi
      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
